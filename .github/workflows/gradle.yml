name: Build and Deploy to EC2

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 리전, 버킷 이름, CodeDeploy 앱 이름, CodeDeploy 배포 그룹 이름
env:
  AWS_REGION: ap-northeast-2
  AWS_S3_BUCKET: ggom-s3-bucket
  AWS_CODE_DEPLOY_APPLICATION: cicd-CD
  AWS_CODE_DEPLOY_GROUP: cicd-group

jobs:
  build-with-gradle:
    runs-on: ubuntu-22.04

    steps:
    # (1) 기본 체크아웃
    - name: Checkout
      uses: actions/checkout@v3

    # (2) JDK 17 세팅
    - name: JDK 17 설치
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'corretto'

    # (3) Gradle build (Test 제외)
    - name: gradlew에 실행 권한 부여
      run: chmod +x ./gradlew
    - name: 프로젝트 빌드
      run: ./gradlew clean build -x test

    # (4) AWS 인증 (IAM 사용자 Access Key, Secret Key 활용)
    - name: AWS credential 설정
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        aws-access-key-id: ${{ secrets.AWS_CICD_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_CICD_SECRET_KEY }}

    # (5) 빌드 결과물을 S3 버킷에 업로드
    - name: S3에 업로드
      run: aws deploy push \
        --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
        --ignore-hidden-files \
        --s3-location s3://$AWS_S3_BUCKET/cicdtest/$GITHUB_SHA.zip \
        --source .

    # (6) S3 버킷에 있는 파일을 대상으로 CodeDeploy 실행
    - name: EC2에 배포
      run: aws deploy create-deployment \
        --application-name ${{ env.AWS_CODE_DEPLOY_APPLICATION }} \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name ${{ env.AWS_CODE_DEPLOY_GROUP }} \
        --s3-location bucket=$AWS_S3_BUCKET,key=cicdtest/$GITHUB_SHA.zip,bundleType=zip
